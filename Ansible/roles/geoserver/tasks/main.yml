---
# Prerequisites
- name: Ensure prerequisites are installed
  become: yes
  apt:
    name: 
      - "{{openjdk_package_name}}"
      - unzip
      - cifs-utils
      - git
      - python-psycopg2
    state: present

# Tomcat installation
- name: install tomcat
  become: yes
  apt:
    name: "{{tomcat_user}}"
    state: present

- name: Fix permissions
  become: yes
  file:
    dest: "{{catalina_base}}"
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"

# GeoServer Datadir
- name: Ensure .ssh directory exists.
  become: yes
  file: 
    dest: "{{dest_key}}"
    mode: 0700 
    owner: "{{tomcat_user}}" 
    state: directory

# Install Gitlab Deply Key
- name: Download ssh key
  become: yes
  become_user: "{{tomcat_user}}"
  become_method: sudo
  copy: 
    src: "{{source_key}}" 
    dest: "{{dest_key}}/id_rsa"
    mode: 0600
    owner: "{{tomcat_user}}"

  # GeoServer Datadir
- name: Ensure .ssh directory exists.
  become: yes
  file:
    dest: "{{dest_key}}"
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    state: directory

# Clone datadir repo
- name: Local repo already exists?
  stat:
    path: "{{repo_download_path}}"
  register: repo

- name: Clone datadir from gitlab
  become: yes
  git:
    repo: "{{repo_url}}"
    clone: yes
    recursive: yes
    accept_hostkey: yes
    key_file: "{{dest_key}}/id_rsa"
    dest: "{{repo_download_path}}/"
  when: repo.stat.exists == False

- name: Fix permissions
  become: yes
  file:
    dest: "{{repo_download_path}}"
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    recurse: yes

# Git pull
- name: Pull datadir from gitlab
  become: yes
  become_user: "{{tomcat_user}}"
  become_method: sudo
  git:
    repo: "{{repo_url}}"
    accept_hostkey: yes
    key_file: "{{dest_key}}/.ssh/id_rsa"
    update: yes
    dest: "{{repo_download_path}}/"

# Install GeoServer WAR
- name: Download GeoServer
  become: yes
  become_user: "{{tomcat_user}}"
  become_method: sudo
  get_url: 
    url: "{{geoserver_url}}"
    dest: "{{catalina_base}}/webapps/geoserver.war"
    remote_src: yes

- name: Set JAVA_OPTS
  become: yes
  lineinfile:
    path: /etc/default/tomcat8
    line: "{{java_opts}}"

- name: create audits dir
  become: yes
  file:
    path: "{{catalina_base}}/audits"
    state: directory
    owner: "{{tomcat_user}}"
    mode: 0700

- name: create GWC Cache dir
  become: yes
  file:
    path: "{{gwc_cache_dir}}"
    state: directory
    owner: "{{tomcat_user}}"
    mode: 0700

- name: Config git user and email
  become: yes
  become_user: "{{tomcat_user}}"
  become_method: sudo
  shell: |
      git config --global user.name {{git_username}}
      git config --global user.email {{git_email}}
  args:
    chdir: "{{repo_download_path}}"

# Install Extra fonts
- name: Install debconf-utils
  become: yes
  apt:
    name:
      - debconf-utils
    state: present

- name: Accept EULA
  become: yes
  command:
    cmd: echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections

- name: Install Extra Fonts
  become: yes
  apt:
    name:
      - ttf-mscorefonts-installer
    state: present

# Configure DB Access
- name: Create GeoServer DB in PostgreSQL
  become: yes
  become_user: postgres
  become_method: sudo
  postgresql_db:
    name: geoserver

- name: Create GeoServer user and grant privileges
  become: yes
  become_user: postgres
  become_method: sudo
  postgresql_user:
    name: "{{geoserver_pg_user}}"
    password: "{{geoserver_pg_pass}}"
    db: geoserver
    priv: "ALL"

- name: Install context.xml
  become: yes
  template:
    src: context.xml.j2
    dest: "{{catalina_base}}/conf/context.xml"
    mode: 0600
    owner: "{{tomcat_user}}"

- name: Install server.xml
  become: yes
  template:
    src: server.xml.j2
    dest: "{{catalina_base}}/conf/server.xml"
    mode: 0600
    owner: "{{tomcat_user}}"

- name: Install web.xml
  become: yes
  template:
    src: web.xml.j2
    dest: "{{catalina_base}}/conf/web.xml"
    mode: 0600
    owner: "{{tomcat_user}}"

- name: Restart Tomcat
  become: yes
  systemd:
    name: tomcat8
    state: restarted

- name: Configure logs rotation
  become: yes
  template:
    src: logrotate_geoserver.j2
    dest: "/etc/logrotate.d/geoserver"

- name: Prune GeoServer logs
  cron:
    name: "prune logs"
    minute: "0"
    hour: "0"
    job: "/usr/bin/find {{catalina_base}}/logs -type f -mtime +{{logs_retention}} -delete"

- name: Prune GeoServer audits
  cron:
    name: "prune audits"
    minute: "30"
    hour: "0"
    job: "/usr/bin/find {{audits_path}} -type f -mtime +{{audits_retention}} -delete"

# GeoServer conf reload
- name: Discard local changes to datadir
  tags: [ never, config_update ]
  become: yes
  become_user: "{{tomcat_user}}"
  become_method: sudo
  git:
    repo: "{{repo_url}}"
    accept_hostkey: yes
    key_file: "{{dest_key}}/.ssh/id_rsa"
    update: yes
    force: yes
    dest: "{{repo_download_path}}/"
  when: "'geoserver' in group_names"

- name: Reload GeoServer configuration
  tags: [ never, config_update, reload ]
  uri:
    url: http://localhost:8080/geoserver/rest/reload/
    user: "{{geoserver_admin_user}}"
    password: "{{geoserver_admin_pass}}"
    method: POST
    force_basic_auth: yes
    status_code: 200
  when: "'geoserver' in group_names"

- name: Get geoserver 1 webpage
  uri:
    timeout: 50
    url: "{{geoserver1_url}}"
    return_content: yes
  register: webpage
  failed_when: "'GeoServer instance' not in webpage.content"

- name: Get geoserver 2 webpage
  uri:
    timeout: 50
    url: "{{geoserver2_url}}"
    return_content: yes
  register: webpage
  failed_when: "'GeoServer instance' not in webpage.content"
