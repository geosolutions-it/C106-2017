---
# deploy geoserver on the local machine
# the necessary ssh is copied manually to the ansible machine

- name: "add group {{tomcat_group}} on ansible machine"
  local_action:
    module: group
    name: "{{tomcat_group}}"
    state: present
  run_once: yes

- name: "add user {{tomcat_user}} on ansible machine"
  local_action:
    module: user
    name: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    state: present
  run_once: yes

- name: install tomcat on ansible machine
  become: yes
  local_action:
      module: apt
      name: tomcat8
      state: present
  run_once: yes

- name: Check for downloaded geoserver war on ansible machine
  local_action:
    module: stat
    path: "/tmp/geoserver-2.16.x-latest-war.zip"
  register: downloaded
  run_once: yes

- name: download geoserver war on ansible machine
  become: yes
  local_action:
    module: get_url 
    url: "{{geoserver_url}}"
    dest: /tmp
    remote_src: yes
    run_once: yes
  when: downloaded.stat.exists == False

- name: unarchive geoserver war on ansible machine
  become: yes
  local_action:
    module: unarchive 
    src: "/tmp/geoserver-2.16.x-latest-war.zip"
    dest: "{{tomcat_install_dir}}/webapps"
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    remote_src: yes
  run_once: yes

- name: Ensure tomcat service is started on ansible machine
  local_action:
    module: systemd
    name: tomcat8
    state: started
    enabled: True
    daemon_reload: yes
  run_once: yes

# push data to gitlab
# to do: move these in defaults when setting pull/clone tasks 
- name: Set temporary vars
  set_fact:
    username: geosolutions
    repo_name: geoserver-data

- name: Config git user and email
  local_action:
    module: 'shell 
      git config --global user.name "{{git_username}}";
      git config --global user.email "{{git_email}}"'
  args:
    chdir: "/home/{{username}}"
  run_once: yes

- name: Clone base repository
  become_user: "{{username}}"
  local_action:
    module: git
    repo: "{{repo_url}}"
    clone: yes
    recursive: yes
    accept_hostkey: yes
    key_file: "/home/{{username}}/.ssh/id_rsa"
    dest: "/home/{{username}}/geoserver-data"
  run_once: yes

- name: Add data files to the repository
  become: yes
  local_action: "shell
    cp -r /var/lib/tomcat8/webapps/geoserver/data/. /home/{{username}}/geoserver-data;
    chown -R {{username}} /home/{{username}}/geoserver-data"
  run_once: yes

- name: Commit and push changes
  become_user: "{{username}}"
  local_action: shell
    rm -f .git/index.lock;
    git add .;
    git commit -m "ansible commit";
    git push -u origin master;
  args:
    chdir: "/home/{{username}}/geoserver-data"
  run_once: yes
