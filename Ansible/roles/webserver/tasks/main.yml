---
# Prerequisites
- name: Ensure prerequisites are installed
  become: yes
  apt:
    name: "{{item}}"
    state: present
  with_items:
  - "{{openjdk_package_name}}"
  - unzip
  - cifs-utils
  - git

# PostgreSQL
- name: Add PostgreSQL repository
  become: yes
  lineinfile:
    path: "/etc/apt/sources.list.d/pgdg.list"
    line: "{{pg_repo_str}}"
    create: yes
  when: inventory_hostname != '127.0.0.1'

- name: Add PostgreSQL repository key
  apt_key:
    url: "{{pg_repo_key_url}}"
    state: present
  when: inventory_hostname != '127.0.0.1'

- name: Install PostgreSQL and Postgis
  become: yes
  apt:
    name: "{{item}}"
    update_cache: yes
    state: present
  with_items:
  - postgresql
  - postgresql-12-postgis-2.5
  when: inventory_hostname != '127.0.0.1'

# GeoServer
- name: Ensure .ssh directory exists.
  file: 
    dest: "/home/{{username}}/.ssh"
    mode: 0700 
    owner: "{{username}}" 
    state: directory

- name: Download ssh key
  copy: 
    src: "{{source_key}}" 
    dest: "{{dest_key}}"
    mode: 0600
    owner: "{{username}}"

- name: Check the repo directory
  stat:
    path: "{{repo_download_path}}"
  register: repo

# Clone Datadir Repo from Gitlab
- name: Clone datadir from gitlab
  become: yes
  git:
    repo: "{{repo_url}}"
    clone: yes
    recursive: yes
    accept_hostkey: yes
    key_file: "/home/{{username}}/.ssh/id_rsa"
    dest: "{{repo_download_path}}/"
  when: repo.stat.exists == False

# pull repo 
- name: Pull datadir from gitlab
  become_method: sudo
  git:
    repo: "{{repo_url}}"
    accept_hostkey: yes
    key_file: "/home/{{username}}/.ssh/id_rsa"
    update: yes
    dest: "{{repo_download_path}}/"
  when: repo.stat.exists == True

# tomcat installation
- name: "add group {{tomcat_group}}"
  group:
    name: "{{tomcat_group}}"
    state: present

- name: "add user {{tomcat_user}}"
  user: 
    name: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    state: present

- name: install tomcat
  become: yes
  apt:
    name: tomcat8
    state: present

- name: Check for downloaded geoserver war
  stat:
    path: "/tmp/{{geoserver_version}}.zip"
  register: downloaded

- name: download geoserver war
  become: yes
  get_url: 
    url: "{{geoserver_url}}"
    dest: /tmp
    remote_src: yes
  when: downloaded.stat.exists == False

- name: unarchive geoserver war
  become: yes
  unarchive: 
    src: "/tmp/{{geoserver_version}}.zip"
    dest: "{{tomcat_install_dir}}/webapps"
    owner: "{{tomcat_user}}"
    group: "{{tomcat_group}}"
    remote_src: yes

- name: create audits dir
  file:
    path: "{{repo_download_path}}/audits"
    state: directory
    owner: tomcat
    mode: 0700

- name: Set JAVA_OPTS
  become: yes
  lineinfile:
    path: /etc/default/tomcat8
    line: "{{java_opts}}"

- name: Ensure tomcat service is started
  systemd:
    name: tomcat8
    state: started
    enabled: True
    daemon_reload: yes

- name: Config git user and email
  shell: |
      git config --global user.name {{git_username}}
      git config --global user.email {{git_email}}
  args:
    chdir: "/home/{{username}}"
  when: inventory_hostname == '127.0.0.1'

- name: Commit and push changes
  shell: |
    rm -f .git/index.lock;
    git add .;
    git commit -m "ansible commit";
    git push -u origin master;
  args:
    chdir: "{{repo_download_path}}"
  when: inventory_hostname == '127.0.0.1'
